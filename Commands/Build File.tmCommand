<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>echo "&lt;h1&gt;Building ${TM_FILENAME%.*}&lt;/h1&gt;"

if [ ${TM_FILENAME##*.} == 'xml' ] 
then
echo 'Meta files are deployed with the normal files.'
fi


if [ ! -f "${TM_FILENAME%.*}.${TM_FILENAME##*.}-meta.xml" ] 
then

if [ ${TM_FILENAME##*.} == 'cls' ]
then echo '&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ApexClass xmlns="http://soap.sforce.com/2006/04/metadata"&gt;&lt;apiVersion&gt;22.0&lt;/apiVersion&gt;&lt;status&gt;Active&lt;/status&gt;&lt;/ApexClass&gt;' &gt; "${TM_FILENAME%.*}.${TM_FILENAME##*.}-meta.xml"
fi

if [ ${TM_FILENAME##*.} == 'page' ]
then echo "&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;
&lt;ApexPage xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt;
&lt;apiVersion&gt;22.0&lt;/apiVersion&gt;
&lt;label&gt;${TM_FILENAME%.*}&lt;/label&gt;
&lt;/ApexPage&gt;" &gt; "${TM_FILENAME%.*}.${TM_FILENAME##*.}-meta.xml"
fi

if [ ${TM_FILENAME##*.} == 'component' ]
then echo "&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;
&lt;ApexComponent xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt;
&lt;apiVersion&gt;22.0&lt;/apiVersion&gt;
&lt;label&gt;${TM_FILENAME%.*}&lt;/label&gt;
&lt;/ApexComponent&gt;" &gt; "${TM_FILENAME%.*}.${TM_FILENAME##*.}-meta.xml"
fi

if [ ${TM_FILENAME##*.} == 'trigger' ]
then echo '&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApexTrigger xmlns="http://soap.sforce.com/2006/04/metadata"&gt;
&lt;apiVersion&gt;22.0&lt;/apiVersion&gt;
&lt;status&gt;Active&lt;/status&gt;
&lt;/ApexTrigger&gt;' &gt; "${TM_FILENAME%.*}.${TM_FILENAME##*.}-meta.xml"
fi

fi

cd "${TM_PROJECT_DIRECTORY}"

. build.properties
if [ ! -f "new.properties" ] 
	then
if [ ${usekeychainaccess} == 'enabled' ]
	then 
	cp build.properties build.back
	shellpassword=$(~/Library/Application\ Support/TextMate/Bundles/ForceDotBundle.tmbundle/Tools/keychain.sh ${password})
	sed "s/${password}/${shellpassword}/" build.properties &gt; new.properties
	cp new.properties build.properties
fi
fi

#echo ${TM_FILENAME%.*}

echo "&lt;hr&gt;&lt;h4&gt;Cleanup&lt;/h4&gt;"
rm -R tmp
mkdir tmp
cd tmp
mkdir classes
mkdir components
mkdir pages
mkdir triggers
cd ..


#echo "&lt;HR&gt;Moving files"
if [ ${TM_FILENAME##*.} == 'cls' ] 
then
cp classes/${TM_FILENAME%.*}.cls tmp/classes/
cp classes/${TM_FILENAME%.*}.cls-meta.xml tmp/classes/
fi

if [ ${TM_FILENAME##*.} == 'page' ] 
then
cp pages/${TM_FILENAME%.*}.page tmp/pages/
cp pages/${TM_FILENAME%.*}.page-meta.xml tmp/pages/
fi

if [ ${TM_FILENAME##*.} == 'component' ]
then
cp components/${TM_FILENAME%.*}.component tmp/components/
cp components/${TM_FILENAME%.*}.component-meta.xml tmp/components/
fi

if [ ${TM_FILENAME##*.} == 'trigger' ] 
then
cp triggers/${TM_FILENAME%.*}.trigger tmp/triggers/
cp triggers/${TM_FILENAME%.*}.trigger-meta.xml tmp/triggers/
fi

cp package.xml tmp/
echo "&lt;h1&gt;Building&lt;/h1&gt;"
echo "&lt;div style='background-color:#ccc'&gt;"
echo "&lt;pre&gt;"
ant build
echo "&lt;/pre&gt;&lt;/div&gt;"
echo "&lt;hr&gt;Done"


date '+%m-%d-%y %H:%M:%S' &gt; .lastbuild

#cleanup
if [ ${usekeychainaccess} == 'enabled' ]
then
cp build.properties build.back
sed "s/${shellpassword}/${password}/" build.properties &gt; new.properties
cp new.properties build.properties
rm new.properties
rm build.back
fi</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>^@b</string>
	<key>name</key>
	<string>Build File</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>55BBA09C-17C3-465B-9526-C7638AC91844</string>
</dict>
</plist>
